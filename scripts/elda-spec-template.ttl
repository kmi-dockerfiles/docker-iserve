#
# Reference Configuration for iServe
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .
@prefix dct:				<http://purl.org/dc/terms/> .
@prefix dce:		        <http://purl.org/dc/elements/1.1/> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:                <http://www.w3.org/2002/07/owl#> .
@prefix skos:               <http://www.w3.org/2004/02/skos/core#> .
@prefix foaf:               <http://xmlns.com/foaf/0.1/> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for example-local entities.
@prefix msm:				<http://iserve.kmi.open.ac.uk/ns/msm#>.
@prefix msm-wsdl:			<http://iserve.kmi.open.ac.uk/ns/msm-wsdl#>.
@prefix sawsdl:				<http://www.w3.org/ns/sawsdl#> .
@prefix wl:					<http://www.wsmo.org/ns/wsmo-lite#> .

# Prefix for NFPs
@prefix msm-nfp:            <http://iserve.kmi.open.ac.uk/ns/msm-nfp#> .
@prefix sioc:               <http://rdfs.org/sioc/ns#> .
@prefix schema:             <http://schema.org/> .
@prefix cc:                 <http://creativecommons.org/ns#> .
@prefix freebase:           <http://rdf.freebase.com/ns/>.

# Prefix for the local specification

@prefix spec:               <%ISERVE_PATH%/api-config#> .

# ---------------------------------------------------------------------
# API config

spec:api a api:API;
	api:sparqlEndpoint <%SPARQL_ENDPOINT%> ;
	rdfs:label "iServe API"@en ;
	api:lang "en,none";
#	api:vocabulary "http://iserve.kmi.open.ac.uk/ns/msm#" ;
    api:base "/%ISERVE_APP_NAME%/" ;

	# the page size can't be set higher than this
	api:maxPageSize 50 ;
	# and this is the default page size
	api:defaultPageSize 10 ;
	# the viewer to use by default, a DESCRIBE plus labels for all the
	# resources that have them.
	api:defaultViewer api:labelledDescribeViewer ;
	# the default formatter is the XSLT formatter defined above
	api:defaultFormatter spec:HtmlFormatter ;
	api:viewer
		api:describeViewer ,
		api:labelledDescribeViewer ;

	api:endpoint
		spec:scheme ,
		spec:scheme-ns ,
		spec:scheme-def ,
		spec:subclasses ,
		spec:instances ,
		spec:properties ,
	    spec:serviceList ,
	    spec:serviceItem ,
		spec:operationsList ,
		spec:operationItem ,
		spec:operationInputsList ,
		spec:messageItem ,
		spec:messagePart,
	    spec:providerList ,
	    spec:providerItem ,
		spec:about ,
		spec:anything ,
		spec:mentions
	        . 
	
# Endpoint definition
<%SPARQL_ENDPOINT%>
        elda:textSearchOperand "?_search" ;
        %TEXT_SEARCH_CONFIG%
        elda:supportsNestedSelect true ;
        .	

# Viewers Definitions

#
## Describe a generic 'thing' as an example of an itemEndpoint.
##
spec:about a api:ItemEndpoint
	; api:uriTemplate     "/about?resource={uri}"
        ; rdfs:comment        "A generic item endpoint API for asking about a specific thing by 'uri'."
        ; api:itemTemplate    "{uri}"
        ; api:viewer          api:basicViewer, api:describeViewer, api:labelledDescribeViewer
        ; api:defaultViewer   api:describeViewer
        .

#
# List 'anything' endpoint
#
spec:anything a api:ListEndpoint
        ; api:name            	"anything" 
        ; rdfs:comment        	"A generic listing endpoint for listing things based solely on URI based filter parameters"@en
        ; api:uriTemplate		"/anything"
        ; api:selector			[api:where   " ?item a ?v1 . FILTER (!isBlank(?item)) "]
        ; api:exampleRequestPath  "/anything"
###
### no selector - defers everything to URI params
###
        ; api:viewer api:describeViewer, api:basicViewer, api:labelledDescribeViewer
        ; api:defaultViewer   api:describeViewer
        .

#
# List things related to a 'mentions' as an example of a ListEndpoint.
#
spec:mentions a api:ListEndpoint
       	; api:uriTemplate     "/mentions?resource={uri}"
	; api:variable [api:name "uri"; api:type rdfs:Resource]
  	; api:selector [api:where "?item ?p ?uri . FILTER (!isBlank(?item))"]
        ; api:viewer api:basicViewer, api:describeViewer, api:labelledDescribeViewer
        ; api:defaultViewer   api:describeViewer;
        .

spec:serviceViewer a api:Viewer ;
	api:name "service" ;
	api:properties "label,comment,created,issued,type,modelReference,modelReference,hasOperation.label,hasOperation.modelReference,hasOperation.modelReference.type,hasOperation.modelReference.value,hasOperation.hasInput.label,hasOperation.hasInput.modelReference,hasOperation.hasOutput.label,hasOperation.hasOutput.modelReference,source,isGroundedIn,provider.label,provider.hasPopularity,hasForum.label,hasForum.hasVitality,hasTotalMashups,hasRecentMashups,seeAlso" .

spec:operationViewer a api:Viewer ;
	api:name "operation" ;
	api:properties "label,comment,type,modelReference,modelReference.type,modelReference.value,hasInput.label,hasInput.modelReference,hasOutput.label,hasOutput.modelReference,hasInputFault.label,hasOutputFault.label,hasOutputFault.label,hasOutputFault.type,source,isGroundedIn" .

spec:messagePartViewer a api:Viewer ;
	api:name "messagePart" ;
	api:properties "label,comment,type,modelReference,hasMandatoryPart.label,hasMandatoryPart.modelReference,hasOptionalPart.label,hasOptionalPart.modelReference,source,isGroundedIn" .

spec:schemeViewer a api:Viewer ;
	api:name "scheme" ;
	api:properties "type,comment,label,altLabel,note,scopeNote,topConcept.prefLabel,comment" ;
	.

spec:providerViewer a api:Viewer ;
        api:name "provider" ;
        api:properties "label,comment,hasPopularity,seeAlso,sameAs" ;
        .

spec:definitionViewer a api:Viewer ;
  api:name "definition" ;
  api:properties "prefLabel,altLabel,label,topConceptOf,broader.prefLabel,narrower.prefLabel,comment,range,domain,type.label,isDefinedBy.label,subClassOf.label,subPropertyOf.label" ;
  .

# This XSLT formatter produces rich HTML from the viewer properties.
#


spec:HtmlFormatter a api:XsltFormatter ;
	api:name "html" ;
	api:mimeType "text/html; charset=utf-8" ;
	api:stylesheet "lda-assets/xslt/result-osm-trimmed.xsl" .

#
# Selectors
#
# Ontology endpoints [cloned and edited from Stuart's
# bathing-water endpoint].

spec:ontology-selector api:where
"""
{ ?item a owl:Ontology }
UNION {?item a skos:ConceptScheme }
UNION {?item a ?type. ?type rdfs:subClassOf skos:Concept}
FILTER (regex(STR(?item),?schemeRegex))
""";
    api:orderBy "str(?item)";
    .

spec:scheme-selector
     api:where """
{?item a owl:Ontology} UNION
{?item a rdf:Property} UNION
{?item a owl:ObjectProperty} UNION
{?item a owl:DatatypeProperty} UNION
{?item a rdfs:Class} UNION
{?item a rdfs:Datatype } UNION
{?item a owl:Class} UNION
{?item a owl:Restriction} UNION
{?item a owl:DatatypeProperty} UNION
{?item a owl:ObjectProperty} UNION
{?item a skos:Concept} UNION
{?item a skos:ConceptScheme} UNION
{?item a ?type. ?type rdfs:subClassOf skos:Concept}
FILTER (regex(STR(?item),?schemeRegex))
""";
     api:orderBy "str(?item)";
     .

spec:subclass-selector
     api:where " ?item rdfs:subClassOf ?superclass . " ;
     api:orderBy "STR(?item)";
     .

spec:instances-selector
     api:where " ?item a ?class . " ;
     api:orderBy "STR(?item)";
     .

spec:properties-selector
     api:where "{ select ?thing where { ?thing a ?class } limit 1000} ?thing ?item []." ;
     api:orderBy "STR(?item)";
     .

# Services Selectors

spec:servicesSelect a api:Selector ;
	api:from "<http://www.ontotext.com/disable-SameAs>";
	api:filter "type=Service" ;
	api:sort "label" .

spec:operationsSelect a api:Selector ;
	api:filter "type=Operation" ;
	api:sort "label" .

spec:operationInputsSelect a api:Selector ;
	api:filter "type=MessageContent" ;
	# To be fixed as the code is not really used properly
	api:where "?operation msm:hasInput ?item . " ;
	api:sort "label" .
 
spec:providerSelect a api:Selector ;
        api:where "?service schema:provider ?item" ;
        api:sort "label" .


#
# List Endpoints
#

# Ontologies and Vocabularies
spec:scheme-def a api:ListEndpoint;
	rdfs:comment "Returns a list of vocabularies under http://iserve.kmi.open.ac.uk/ns/"@en;
	api:viewer    api:describeViewer, spec:schemeViewer, api:basicViewer;
	api:uriTemplate  "/doc/def";
	api:variable [ api:name "schemeRegex"; api:value "^http://iserve.kmi.open.ac.uk/ns/" ];
	api:selector spec:ontology-selector ;
	api:defaultViewer spec:schemeViewer ;
	.

spec:scheme a api:ListEndpoint ;
	rdfs:comment "Returns a paged list of vocabulary terms from a given vocabulary."@en;
	api:uriTemplate "/doc/def/{scheme}" ;
	api:variable [ api:name "schemeRegex"; api:value "^http://iserve.kmi.open.ac.uk/ns/{scheme}" ];
	api:selector spec:scheme-selector ;
	api:viewer spec:definitionViewer, api:describeViewer, api:basicViewer ;
	api:defaultViewer spec:schemeViewer ;
	.

spec:subclasses a api:ListEndpoint ;
   rdfs:comment "Lists defined subclasses of a given vocabulary (class) term."@en;
   api:uriTemplate "/doc/def/{scheme}/{term}/subclass" ;
   api:variable [
     api:name "superclass" ;
     api:value "http://iserve.kmi.open.ac.uk/ns/{scheme}#{term}" ;
     api:type rdfs:Resource ;
   ] ;
   api:selector spec:subclass-selector ;
   api:viewer spec:definitionViewer, api:describeViewer, api:basicViewer;
   api:defaultViewer spec:definitionViewer ;
   .

spec:instances a api:ListEndpoint ;
   rdfs:comment "Lists known instances of a given vocabulary (class) term."@en;
   api:uriTemplate "/doc/def/{scheme}/{term}/instance" ;
   api:variable [
     api:name "class" ;
     api:value "http://iserve.kmi.open.ac.uk/ns/{scheme}#{term}" ;
     api:type rdfs:Resource ;
   ] ;
   api:selector spec:instances-selector;
   api:viewer spec:definitionViewer, api:describeViewer, api:basicViewer;
   api:defaultViewer api:describeViewer ;
   .

spec:properties a api:ListEndpoint ;
   rdfs:comment "Lists properties used in the dataset to describe instances of a given vocabulary (class) term."@en;
   api:uriTemplate "/doc/def/{scheme}/{term}/property" ;
   api:variable [
     api:name "class" ;
     api:value "http://iserve.kmi.open.ac.uk/ns/{scheme}#{term}" ;
     api:type rdfs:Resource ;
   ] ;
   api:selector spec:properties-selector;
   api:viewer spec:definitionViewer, api:describeViewer, api:basicViewer;
   api:defaultViewer api:describeViewer ;
   .

# Services List Endpoints
spec:serviceList a api:ListEndpoint ;
	rdfs:label "Services List"@en ;
	api:uriTemplate "/doc/services" ;
	api:selector spec:servicesSelect ;
    api:viewer api:describeViewer, api:basicViewer, spec:serviceViewer ;
    api:defaultViewer spec:serviceViewer .

spec:operationsList a api:ListEndpoint ;
	rdfs:label "Operations List"@en ;
	api:uriTemplate "/doc/operations" ;
	api:selector spec:operationsSelect ;
    api:viewer api:describeViewer, api:basicViewer, spec:operationViewer ;
    api:defaultViewer spec:operationViewer .

spec:operationInputsList a api:ListEndpoint ;
	rdfs:label "Operation Inputs List"@en ;
	api:uriTemplate "/doc/services/{svcId}/{serviceName}/{opName}/messages" ;
	# Define a variable that represents that actual operation ID.
	api:variable [
    	api:name "operation" ;
    	api:value "%ISERVE_PATH%/id/services/{svcId}/{serviceName}/{opName}" ;
    	api:type rdfs:Resource ;
   	] ;
   	api:variable [
        	api:name "service" ;
        	api:value "%ISERVE_PATH%/id/services/{svcId}/{serviceName}" ;
        	api:type rdfs:Resource ;
       	] ;
	api:selector spec:operationInputsSelect ;
    api:viewer api:describeViewer, api:basicViewer, spec:operationViewer ;
    api:defaultViewer spec:operationViewer .

spec:providerList a api:ListEndpoint ;
        rdfs:label "Providers List"@en ;
        api:uriTemplate "/doc/providers" ;
        api:selector spec:providerSelect ;
    api:viewer api:describeViewer, api:basicViewer, spec:providerViewer ;
    api:defaultViewer spec:providerViewer . 	 

#
#Items Endpoints
#

# Ontolgy Item Endpoints
spec:scheme-ns a api:ItemEndpoint ;
   rdfs:comment "Returns information about the vocabulary."@en;
   api:uriTemplate "/doc/def/{scheme}/" ;
   api:itemTemplate "%ISERVE_PATH%/id/def/{scheme}/" ;
   api:viewer spec:schemeViewer, api:describeViewer, api:basicViewer;
   api:defaultViewer spec:schemeViewer;
   .

spec:definition a api:ItemEndpoint ;
  api:uriTemplate "/doc/def/{scheme}/{term}" ;
  api:itemTemplate "{base}/id/def/{scheme}/{term}" ;
  api:defaultViewer spec:definitionViewer ;
  api:viewer spec:definitionViewer, api:describeViewer, api:basicViewer;
  .

# Services Item Endpoints
spec:serviceItem a api:ItemEndpoint ;
    rdfs:label "Service"@en ;
    api:uriTemplate "/doc/services/{svcId}/{serviceName}" ;
	api:itemTemplate "%ISERVE_PATH%/id/services/{svcId}/{serviceName}" ;
    api:viewer api:describeViewer, api:basicViewer, spec:serviceViewer ;
    api:defaultViewer spec:serviceViewer .

spec:operationItem a api:ItemEndpoint ;
    rdfs:label "Operation"@en ;
    api:uriTemplate "/doc/services/{svcId}/{serviceName}/{opName}" ;
    api:itemTemplate "%ISERVE_PATH%/id/services/{svcId}/{serviceName}/{opName}" ;
    api:variable [
            	api:name "service" ;
            	api:value "%ISERVE_PATH%/id/services/{svcId}/{serviceName}" ;
            	api:type rdfs:Resource ;
           	] ;
    api:viewer api:describeViewer, api:basicViewer, spec:operationViewer ;
    api:defaultViewer spec:operationViewer .

spec:messageItem a api:ItemEndpoint ;
    rdfs:label "Message Content"@en ;
    api:uriTemplate "/doc/services/{svcId}/{serviceName}/{opName}/{messageName}" ;
    api:itemTemplate "%ISERVE_PATH%/id/services/{svcId}/{serviceName}/{opName}/{messageName}" ;
    api:viewer api:describeViewer, api:basicViewer, spec:messagePartViewer ;
    api:defaultViewer spec:messagePartViewer .

spec:messagePart a api:ItemEndpoint ;
    rdfs:label "Message Part"@en ;
    api:uriTemplate "/doc/services/{svcId}/{serviceName}/{opName}/{messageName}/{messagePart}" ;
    api:itemTemplate "%ISERVE_PATH%/id/services/{svcId}/{serviceName}/{opName}/{messageName}/{messagePart}" ;
    api:viewer api:describeViewer, api:basicViewer, spec:messagePartViewer ;
    api:defaultViewer spec:messagePartViewer .

spec:providerItem a api:ItemEndpoint ;
    rdfs:label "Provider"@en ;
    api:uriTemplate "/doc/providers/{providerId}" ;
        api:itemTemplate "%ISERVE_PATH%/id/providers/{providerId}" ;
    api:viewer api:describeViewer, api:basicViewer, spec:providerViewer ;
    api:defaultViewer spec:providerViewer .
	
# Vocabulary Definitions

#iServe-specific terminology		
	
# MSM

msm:MessageContent api:label "MessageContent" .

msm:MessagePart api:label "MessagePart" .

msm:Operation api:label "Operation" .

msm:Service api:label "Service" .

msm:hasInput 
	api:label "hasInput" ;
   	api:multiValued true ;
   	rdfs:range msm:MessageContent 
   	.

msm:hasInputFault
	api:label "hasInputFault" ;
	rdfs:range msm:MessageContent 
	.

msm:hasMandatoryPart 
	api:label "hasMandatoryPart" ;
	api:multiValued true ;
	rdfs:range msm:MessagePart 
	.

msm:hasName api:label "hasName" .

msm:hasOperation
	api:label "hasOperation" ;
	api:multiValued true ;
	rdfs:range msm:Operation 
	.

msm:hasOptionalPart 
	api:label "hasOptionalPart" ;
	api:multiValued true ;
	rdfs:range msm:MessagePart 
	.

msm:hasOutput 
	api:label "hasOutput" ;
   	api:multiValued true ;
   	rdfs:range msm:MessageContent 
   	.

msm:hasOutputFault 
	api:label "hasOutputFault"  ;
	rdfs:range msm:MessageContent 
	.

msm:hasPart 
	api:label "hasPart"  ;
	api:multiValued true ;
	rdfs:range msm:MessagePart 
	.

msm:hasPartTransitive 
	api:label "hasPartTransitive" ;
	api:multiValued true ;
	rdfs:range msm:MessagePart 
	.

# MSM-WSDL
msm-wsdl:isGroundedIn 
	api:label "isGroundedIn" ;
	rdfs:range rdf:Resource 
	.

# MSM-NFP

msm-nfp:hasPopularity 
        api:label "hasPopularity" ;
        a owl:DatatypeProperty ;
        rdfs:range xsd:double ;
  	.

schema:provider 
	api:label "provider";
	api:multiValued true ; 
	rdfs:range schema:Organization ;
	 .

msm-nfp:hasForum 
	api:label "hasForum" ;
	rdfs:range sioc:Forum;
	.

sioc:Forum
	api:label "forum" .

msm-nfp:hasVitality  
        a owl:DatatypeProperty ;
        rdfs:range xsd:double ;
	api:label "hasVitality" .

msm-nfp:hasTotalMashups   
	a owl:DatatypeProperty ;
        rdfs:range xsd:int ;
        api:label "hasTotalMashups" .

msm-nfp:hasRecentMashups
        a owl:DatatypeProperty ;
        rdfs:range xsd:int ;
        api:label "hasRecentMashups" .

# SAWSDL	
sawsdl:modelReference 
	api:label "modelReference" ;
	api:multiValued true ;
	rdfs:range rdf:Resource 
	.
	
sawsdl:liftingSchemaMapping 
	api:label "liftingSchemaMapping" ;
	rdfs:range rdf:Resource 
	.
	
sawsdl:loweringSchemaMapping 
	api:label "loweringSchemaMapping" ;
	rdfs:range rdf:Resource 
	.

# WSMO-Lite	
wl:NonfunctionalParameter api:label "NonFunctionalParameter" .
wl:Condition api:label "Condition" .
wl:Effect api:label "Effect" .


# General Basic Resources
	
# RDF/S	
rdf:Property api:label "Property" .

rdf:type api:label "type" 
    ; api:multiValued true 
    ; rdfs:range rdfs:Class 
    .

rdf:value api:label "value" .

rdfs:Class api:label "Class" .

rdfs:label api:label "label" ; api:multiValued false .

rdfs:seeAlso api:label "seeAlso" ; api:multiValued true .

rdfs:comment api:label "comment" .

rdfs:range api:label "range" .

rdfs:domain api:label "domain" .

rdfs:isDefinedBy api:label "isDefinedBy" .

rdfs:subClassOf api:label "subClassOf" .

rdfs:subPropertyOf api:label "subPropertyOf" .

# OWL
owl:sameAs api:label "sameAs";
	   api:multiValued true; .
owl:imports api:label "imports" .
owl:versionInfo api:label "versionInfo" .

# FOAF
foaf:isPrimaryTopicOf a rdf:Property;
    api:label "isPrimaryTopicOf"
    .

# SKOS	
skos:prefName api:label "prefName".

skos:Concept api:label "Concept" .

skos:ConceptScheme api:label "ConceptScheme" .

skos:prefLabel api:label "prefLabel" .

skos:altLabel api:label "altLabel" 
	; api:multiValued true .

skos:note api:label "note" .

skos:notation api:label "notation" .

skos:scopeNote api:label "scopeNote" .

skos:topConceptOf api:label "topConceptOf" 
	; rdfs:range rdfs:Resource
	.

skos:hasTopConcept api:label "topConcept"  
	; rdfs:range rdfs:Resource 
	; api:multiValued true 
	.

skos:broader api:label "broader"  
	; rdfs:range rdfs:Resource
	.

skos:narrower api:label "narrower"  
	; rdfs:range rdfs:Resource
	; api:multiValued true 
	.

# DC
dct:source api:label "documentSource" .
	
dct:date
  a owl:DatatypeProperty ;
  rdfs:range xsd:date ;
  api:label "dated" .
	
dct:created
  a owl:DatatypeProperty ;
  rdfs:range xsd:date ;
  api:label "created" .
  
dct:issued
  a owl:DatatypeProperty ;
  rdfs:range xsd:date ;
  api:label "issued" .

dct:modified
  a owl:DatatypeProperty ;
  rdfs:range xsd:date ;
  api:multiValued true ;
  api:label "modified" .
  
dct:description api:label "description" .
  
dct:creator
	rdfs:range rdfs:Resource ;
	api:multiValued true ;
  	api:label "creator" .
