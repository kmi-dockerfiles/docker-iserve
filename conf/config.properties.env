# Proxy Configuration
# http.proxyHost = proxy.company.com
# http.proxyPort = 80

# iServe Configuration
iserve.url = http://${env:ISERVE_HOST}:${env:ISERVE_PORT}/iserve

# Documents Server
# It is recommended that you use absolute paths for storing documents as these may be deleted when redeploying the server otherwise
iserve.documents.folder = ${env:ISERVE_DATA}/docs

# Core Data RDF Server
iserve.services.sparql.query = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/query
iserve.services.sparql.update = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/update
iserve.services.sparql.service = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/data

# NFP Data RDF store
iserve.nfp.sparql.query = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/query
iserve.nfp.sparql.update = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/update
iserve.nfp.sparql.service = http://${env:RDFSTORE_HOST}:${env:RDFSTORE_PORT}/iserve/data

# Discovery Configuration
#iserve.discovery.conceptMatcher = uk.ac.open.kmi.iserve.discovery.disco.impl.SparqlIndexedLogicConceptMatcher
iserve.discovery.conceptMatcher = uk.ac.open.kmi.iserve.discovery.disco.impl.SparqlLogicConceptMatcher
iserve.discovery.freetextsearch = uk.ac.open.kmi.iserve.discovery.api.freetextsearch.sparql.impl.FusekiSearchPlugin

# Redis caching configuration (if Redis instance is not running iServe will switch to in-memory caching mode automatically)
iserve.util.cache.redis.host = ${env:REDIS_HOST}
iserve.util.cache.redis.port = ${env:REDIS_PORT}

